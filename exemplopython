import cv2
import numpy as np
import time

# exemplo de interpolacao de imagens
# este trabalho consiste em utilizar a técnica de interpolação de imagens para fazer uma transição entre duas imagens

# função que dispensa um numero n de pixel tanto no eixo x quanto no eixo y
def remover_vizinhos(a,n):
    return a[::n,::n]

# função responsável por adicionar vizinhos tanto no eixo x quanto no eixo y
def adicionar_vizinhos(a,n):
    return np.repeat((np.repeat(a,n,axis=0)),n,axis=1)

# função responsável por dar uma pausa entre uma amostragem a outra
def pause():
    time.sleep(0.1)

# exibe a imagem e espera alguma tecla
img = cv2.imread('lena_original_256.pgm',0) # usa a primeira imagem aqui
cv2.imshow('image',img)
cv2.waitKey(0)

n = 1 # n -> número de vizinhos que vamos remover e adicionar
maxn = 30 # maxn -> número máximo de vizinhos

#  enquanto o numero de vizinhos é menor que o máximo, exibe a imagem aplicando a função primeiro de remover vizinhos
#  e com o seu retorno aplica a função de adicionar vizinhos.
while n < maxn:
    cv2.imshow('image', adicionar_vizinhos(remover_vizinhos(img,n), n))
    cv2.waitKey(5)
    n = n + 1
    pause()

# troca de imagem
img = cv2.imread('lena_noise.pgm',0) # usa a segunda imagem aqui
n = maxn

# aplica o processo contrario do primeiro laço (diminui o numero de vizinhos)
while n > 0:
    cv2.imshow('image', adicionar_vizinhos(remover_vizinhos(img,n), n))
    cv2.waitKey(5)
    n = n - 1
    pause()

# exibe a imagem
cv2.imshow('image',img)
cv2.waitKey(0)
